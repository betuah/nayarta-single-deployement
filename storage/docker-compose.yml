# =============================================================================
# STORAGE ONLY - For standalone storage server
# =============================================================================
# Usage: docker-compose -f docker-compose.storage.yml up -d
# =============================================================================

networks:
  nayarta-network:
    name: nayarta-network
    driver: bridge

services:
  minio:
    profiles: ["storage", "all", "appstack"]
    image: minio/minio:latest
    container_name: nayarta-minio
    restart: unless-stopped
    # env_file:
    #   - .env
    ports:
      - "9100:9000"
      - "9101:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER: "on"
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
    volumes:
      - ./data:/data
    command: server /data --console-address ":9001"
    networks:
      - nayarta-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  minio-init:
    profiles: ["storage", "all", "appstack"]
    image: minio/mc:latest
    container_name: nayarta-minio-init
    depends_on:
      minio:
        condition: service_healthy
    # env_file:
    #   - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_APP_USER: ${MINIO_APP_USER}
      MINIO_APP_PASSWORD: ${MINIO_APP_PASSWORD}
      MINIO_ACCESS_KEY: ${OBJECT_STORAGE_ACCESS_KEY_ID}
      MINIO_SECRET_KEY: ${OBJECT_STORAGE_ACCESS_KEY_SECRET}
      MINIO_BUCKETS: ${OBJECT_STORAGE_DEFAULT_BUCKET:-nayarta-storage}
    networks:
      - nayarta-network
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set nayarta http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD;
      for bucket in $$(echo $$MINIO_BUCKETS | tr ',' ' '); do
        echo \"Creating bucket: $$bucket\";
        /usr/bin/mc mb nayarta/$$bucket --ignore-existing;
        /usr/bin/mc anonymous set download nayarta/$$bucket;
      done;

      echo \"Creating public folder with public ACL\";
      touch .gitkeep;
      echo \"Public folder created\" >> .gitkeep;
      /usr/bin/mc cp .gitkeep nayarta/$${MINIO_BUCKETS%% *}/public/.gitkeep;
      /usr/bin/mc anonymous set public nayarta/$${MINIO_BUCKETS%% *}/public;
      /usr/bin/mc anonymous get nayarta/$${MINIO_BUCKETS%% *}/public;

      # Create service account
      echo 'Creating service account for user: $$MINIO_APP_USER and access key: $$MINIO_ACCESS_KEY and secret key: $$MINIO_SECRET_KEY';
      /usr/bin/mc admin user svcacct add nayarta $$MINIO_ROOT_USER --access-key $$MINIO_ACCESS_KEY --secret-key $$MINIO_SECRET_KEY;
      
      echo 'Setup Finish! MinIO nayarta is ready to use with public folders $${MINIO_BUCKETS} and service account $${MINIO_ROOT_USER}';
      exit 0;
      "

# volumes:
#   minio_data:
#     name: nayarta_minio_data
#   minio_logs:
#     name: nayarta_minio_logs