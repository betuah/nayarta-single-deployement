# =============================================================================
# DATABASE ONLY - For standalone database server
# =============================================================================
# Usage: docker-compose -f docker-compose.database.yml up -d
# =============================================================================

networks:
  nayarta-network:
    name: nayarta-network
    driver: bridge

services:
  postgres:
    profiles: ["database", "all", "appstack"]
    image: pgvector/pgvector:pg16
    container_name: nayarta-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME:-vms_development}
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./config/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./backup:/dumps:ro
      - ./scripts/restore.sh:/docker-entrypoint-initdb.d/01-restore.sh:ro
      - ./scripts/pgvector.sh:/docker-entrypoint-initdb.d/02-enable-pgvector.sh:ro
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - nayarta-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${DB_USER:-admin} -d $${DB_NAME:-vms_development}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres-backup:
    profiles: ["dbbackup", "postgresbackup"]
    image: postgres:16-alpine
    container_name: nayarta-postgres-backup
    command: >
      bash -c "
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        BACKUP_DIR=/dumps/$TIMESTAMP
        mkdir -p $BACKUP_DIR

        echo 'ðŸ“¦ Dumping globals (roles, permissions)...'
        pg_dumpall -h nayarta-postgres -U ${DB_USER:-admin} --globals-only > $BACKUP_DIR/globals.sql

        echo 'ðŸ“¦ Dumping database...'
        pg_dump -h nayarta-postgres -U ${DB_USER:-admin} -Fc -f $BACKUP_DIR/vms_development.dump vms_development
        pg_dump -h nayarta-postgres -U ${DB_USER:-admin} -Fc -f $BACKUP_DIR/analytics_db.dump analytics_db
        pg_dump -h nayarta-postgres -U ${DB_USER:-admin} -Fc -f $BACKUP_DIR/schedulerdb.dump schedulerdb

        echo 'Backup completed: $BACKUP_DIR'
        ls -lh $BACKUP_DIR
      "
    volumes:
      - ./backup:/dumps
    networks:
      - nayarta-network
    depends_on:
      - postgres
    restart: "no"

# volumes:
#   postgres_data:
#     name: nayarta_postgres_data
#   postgres_logs:
#     name: nayarta_postgres_logs